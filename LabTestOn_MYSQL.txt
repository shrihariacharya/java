__________________________________________________________________________________________________________________________
QUESTION 1.Create Table..

a).Write a SQL statement to create a table named jobs including columns job_id,
 job_title, min_salary, max_salary and check whether the max_salary should  be greater than  8000.

mysql> create table jobs(job_id int, job_title varchar(20), min_salary decimal, max_salary decimal check (max_salary > 8000), PRIMARY KEY(job_id));
Query OK, 0 rows affected, 1 warning (0.05 sec)

mysql> desc jobs;
+------------+---------------+------+-----+---------+-------+
| Field      | Type          | Null | Key | Default | Extra |
+------------+---------------+------+-----+---------+-------+
| job_id     | int           | NO   | PRI | NULL    |       |
| job_title  | varchar(20)   | YES  |     | NULL    |       |
| min_salary | decimal(10,0) | YES  |     | NULL    |       |
| max_salary | decimal(10,0) | YES  |     | NULL    |       |
+------------+---------------+------+-----+---------+-------+
4 rows in set (0.00 sec)
___________________________________________________________________

b). Write a SQL statement to create a table named countries including columns country_id, 
country_name and region_id and make sure that no countries except Italy, India and China 
will be entered in the table.

mysql> CREATE TABLE   (COUNTRY_ID int(4) , COUNTRY_NAME varchar(40) CHECK(COUNTRY_NAME IN('Italy','India','China')) ,REGION_ID varchar(10));
Query OK, 0 rows affected (0.07 sec)

mysql> desc COUNTRIES;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| COUNTRY_ID   | int         | YES  |     | NULL    |       |
| COUNTRY_NAME | varchar(40) | YES  |     | NULL    |       |
| REGION_ID    | varchar(10) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)
___________________________________________________________________

c).Write a SQL statement to create a table job_history including columns employee_id, start_date, end_date,
 job_id and department_id and make sure that, the employee_id column does not contain any duplicate value 
at the time of insertion  .

mysql> CREATE TABLE JOB_HISTORY (EMPLOYEE_ID VARCHAR(10) UNIQUE, START_DATE DATE, END_DATE DATE, JOB_ID  INT , DEPARTMENT_ID VARCHAR (10) ,PRIMARY KEY(job_id));
Query OK, 0 rows affected (0.10 sec)

mysql> desc job_history;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| EMPLOYEE_ID   | varchar(10) | YES  | UNI | NULL    |       |
| START_DATE    | date        | YES  |     | NULL    |       |
| END_DATE      | date        | YES  |     | NULL    |       |
| JOB_ID        | int         | NO   | PRI | NULL    |       |
| DEPARTMENT_ID | varchar(10) | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
5 rows in set (0.00 sec)
__________________________________________________________________________________________________________________________

QUESTION 2.Alter Table..

a).Write a SQL statement to add a foreign key constraint named fk_job_id on job_id column of 
job_history table referencing to the primary key job_id of jobs table.

mysql> alter table job_history add CONSTRAINT fk_job_id  foreign key(job_id)  REFERENCES jobs(job_id);
Query OK, 0 rows affected (0.12 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc job_history;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| EMPLOYEE_ID   | varchar(10) | YES  | UNI | NULL    |       |
| START_DATE    | date        | YES  |     | NULL    |       |
| END_DATE      | date        | YES  |     | NULL    |       |
| JOB_ID        | int         | NO   | PRI | NULL    |       |
| DEPARTMENT_ID | varchar(10) | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
5 rows in set (0.00 sec)

___________________________________________________________________


b).Write a SQL statement to rename the table countries to country_new.

mysql> alter table COUNTRIES rename to NEW_COUNTRIES;
Query OK, 0 rows affected (0.04 sec)

mysql> desc NEW_COUNTRIES;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| COUNTRY_ID   | int         | YES  |     | NULL    |       |
| COUNTRY_NAME | varchar(40) | YES  |     | NULL    |       |
| REGION_ID    | varchar(10) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)
___________________________________________________________________


c).Write a SQL statement to change the name of the column country_id to con_id, 
keeping the data type and size same.

mysql> alter table  NEW_COUNTRIES change COUNTRY_ID CON_ID int (4) not null;
Query OK, 0 rows affected, 1 warning (0.10 sec)
Records: 0  Duplicates: 0  Warnings: 1

mysql> desc NEW_COUNTRIES;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| CON_ID       | int         | NO   |     | NULL    |       |
| COUNTRY_NAME | varchar(40) | YES  |     | NULL    |       |
| REGION_ID    | varchar(10) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)
__________________________________________________________________________________________________________________________

QUESTION 3.DML Statement..

a).Write a SQL statement to insert a record with your own value into the table countries against each columns.

mysql> insert into NEW_COUNTRIES(COUNTRY_ID, COUNTRY_NAME, REGION_ID) values (1,'INDIA', '100'),(2,'ITALY','200'),(3,'CHINA','300');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select * from NEW_COUNTRIES;
+------------+--------------+-----------+
| COUNTRY_ID | COUNTRY_NAME | REGION_ID |
+------------+--------------+-----------+
|          1 | INDIA        | 100       |
|          2 | ITALY        | 200       |
|          3 | CHINA        | 300       |
+------------+--------------+-----------+
3 rows in set (0.00 sec)
___________________________________________________________________

b).Write a SQL statement to insert 6 rows by a single insert statement into jobs table.

mysql> insert into jobs (job_id, job_title, min_salary, max_salary) values(1,'MANAGER',20000,100000),(2,'HR',10000,60000),(3,'PROGRAMMER',20000,60000),(4,'TESTER',15000,40000),(5,'CLERK',10000,40000),(6,'SALES MANAGER',40000,100000);
Query OK, 6 rows affected (0.01 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> select * from jobs;
+--------+---------------+------------+------------+
| job_id | job_title     | min_salary | max_salary |
+--------+---------------+------------+------------+
|      1 | MANAGER       |      20000 |     100000 |
|      2 | HR            |      10000 |      60000 |
|      3 | PROGRAMMER    |      20000 |      60000 |
|      4 | TESTER        |      15000 |      40000 |
|      5 | CLERK         |      10000 |      40000 |
|      6 | SALES MANAGER |      40000 |     100000 |
+--------+---------------+------------+------------+
6 rows in set (0.00 sec)

___________________________________________________________________

c).Write a SQL statement to change Min_salary  to 8000 and max_Salary to 40000 for programmer.

mysql> update jobs set min_salary=8000,max_salary=40000 where job_title='Programmer';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from jobs;
+--------+---------------+------------+------------+
| job_id | job_title     | min_salary | max_salary |
+--------+---------------+------------+------------+
|      1 | MANAGER       |      20000 |     100000 |
|      2 | HR            |      10000 |      60000 |
|      3 | PROGRAMMER    |       8000 |      40000 |
|      4 | TESTER        |      15000 |      40000 |
|      5 | CLERK         |      10000 |      40000 |
|      6 | SALES MANAGER |      40000 |     100000 |
+--------+---------------+------------+------------+
6 rows in set (0.00 sec)
__________________________________________________________________________________________________________________________